name: Google Compute Engine Create
on:
  workflow_dispatch:
    inputs:
      k-folds:
        description: 'number of k-folds'
        required: true
        default: 10
      epochs:
        description: 'number of epochs'
        required: true
        default: 5000
      learning-rate:
        description: 'learning rate'
        required: true
        default: 0.001
      patience:
        description: 'number of epochs to wait for improvements before finishing training'
        required: true
        default: 500
      slice-width:
        description: 'number of measurements per slice'
        required: true
        default: 500
      window-step:
        description: 'step size used for sliding window data splitter'
        required: true
        default: 500
env:
  PROJECT_ID: "bike-path-quality"
  GCE_INSTANCE: "bike-path-quality-analytics"
  GCE_INSTANCE_ZONE: "europe-west2-a"
  GCE_SERVICE_ACCOUNT: "bike-path-quality-analytics@bike-path-quality.iam.gserviceaccount.com"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: "bike-path-quality"
          service_account_key: ${{ secrets.GOOGLE_CLOUD_TOKEN }}
          export_default_credentials: true
        env:
          GOOGLE_CLOUD_TOKEN: ${{ secrets.GOOGLE_CLOUD_TOKEN }}
      - name: Prepare Google Cloud service account token
        id: prepare-google-cloud-service-account-token
        run: echo $GOOGLE_CLOUD_TOKEN | base64 --decode > ./bike-path-quality-2bebc8ae5dc6.json
        env:
          GOOGLE_CLOUD_TOKEN: ${{ secrets.GOOGLE_CLOUD_TOKEN }}
      - name: Create compute instance
        id: create-compute-instance
        run: |
          gcloud compute instances create "$GCE_INSTANCE" \
            --zone="$GCE_INSTANCE_ZONE" \
            --machine-type=n1-standard-8 \
            --image-family=pytorch-latest-gpu \
            --image-project=deeplearning-platform-release \
            --maintenance-policy=TERMINATE \
            --accelerator="type=nvidia-tesla-t4,count=1" \
            --service-account="$GCE_SERVICE_ACCOUNT" \
            --scopes="https://www.googleapis.com/auth/cloud-platform" \
            --metadata="install-nvidia-driver=True",startup-script='#! /bin/bash
                sudo apt-get install python3-venv -y
                sudo useradd -m -s /bin/bash bike-path-quality-analytics
                sudo -u bike-path-quality-analytics bash -c "mkdir -p ~/.ssh; ssh-keyscan github.com >> ~/.ssh/known_hosts"
                sudo -u bike-path-quality-analytics bash -c "cd ~/; git clone https://github.com/fom-big-data-bike-path-quality/fom-big-data-bike-path-quality-analytics.git"
                sudo -u bike-path-quality-analytics bash -c "cd ~/; git clone https://github.com/fom-big-data-bike-path-quality/fom-big-data-bike-path-quality-data.git fom-big-data-bike-path-quality-analytics/data"
                sudo -u bike-path-quality-analytics bash -c "gsutil cp gs://bike-path-quality-analytics/telegram.config ~/fom-big-data-bike-path-quality-analytics/lib/log/"
                sudo -u bike-path-quality-analytics bash -c "cd ~/fom-big-data-bike-path-quality-analytics; python3 -m venv venv"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; python3 -m pip install --upgrade pip"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install flake8 pytest"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install pandas"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install matplotlib"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install sklearn"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install torch"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install tqdm"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install seaborn"
                sudo -u bike-path-quality-analytics bash -c "source ~/fom-big-data-bike-path-quality-analytics/venv/bin/activate; pip3 install telegram-send"
                sudo -u bike-path-quality-analytics bash -c "cd ~/fom-big-data-bike-path-quality-analytics; source ./venv/bin/activate; nohup python3 main.py --clean --k-folds=${{ github.event.inputs.k-folds }} --epochs=${{ github.event.inputs.epochs }} --learning-rate=${{ github.event.inputs.learning-rate }} --patience=${{ github.event.inputs.patience }} --slice-width=${{ github.event.inputs.slice-width }} --window-step=${{ github.event.inputs.window-step }} 2>&1 | tee log.txt"
                sudo -u bike-path-quality-analytics bash -c "TIMESTAMP=$(date '+%Y-%m-%d-%H:%M:%S'); cd ~/fom-big-data-bike-path-quality-analytics/models/models; zip -r ${TIMESTAMP}.zip latest"
                sudo -u bike-path-quality-analytics bash -c "gsutil cp ~/fom-big-data-bike-path-quality-analytics/models/models/*.zip gs://bike-path-quality-results"
              EOF'
